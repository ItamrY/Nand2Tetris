// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/PC.hdl
/**
 * A 16-bit counter.
 * if      reset(t): out(t+1) = 0
 * else if load(t):  out(t+1) = in(t)
 * else if inc(t):   out(t+1) = out(t) + 1
 * else              out(t+1) = out(t)
 */
CHIP PC {
    IN in[16], reset, load, inc;
    OUT out[16];
    
    PARTS:
    //Mux16(a=outRegister , b=false , sel=reset , out=outReseted );
    //Mux16(a=outReseted , b=in , sel=load , out=outLoaded );
    //Inc16(in=outLoaded , out=outInc );
    //Mux16(a=outLoaded , b=outInc , sel=inc , out=outNext );
    //Register(in= outNext, load=true , out=outRegister );

    Inc16(in=outRegister , out=outInc ); //incremented variable
    Mux16(a=in , b=outInc , sel=inc , out=outMux1 ); // inc condition
    Mux16(a=outMux1 , b=in , sel=load , out=outMux2 ); // load condition
    Mux16(a=outMux2 , b=false , sel=reset , out=outReseted ); // reset condition
    Register(in=outReseted , load=true , out=out, out=outRegister ); // registered output
    
}